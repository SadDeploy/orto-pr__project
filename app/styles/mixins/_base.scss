//
// Mixins -> Base
// ------------------------------------

// ADDS A BROWSER PREFIX TO THE PROPERTY */
@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
  -khtml-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -o-#{$property}: #{$value};
  #{$property}: #{$value};
}

/* gradient */
@mixin background-gradient($startColor: #3C3C3C, $endColor: #999999) {
  background-color: $startColor;
  background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
  background-image: -webkit-linear-gradient(top, $startColor, $endColor);
  background-image:    -moz-linear-gradient(top, $startColor, $endColor);
  background-image:     -ms-linear-gradient(top, $startColor, $endColor);
  background-image:      -o-linear-gradient(top, $startColor, $endColor);
  background-image:         linear-gradient(top, $startColor, $endColor);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

/* opacity */
@mixin opacity ($opacity: 0.5) {
  -webkit-opacity: $opacity;
     -moz-opacity: $opacity;
          opacity: $opacity;
}

/* box shadow */
@mixin box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4), $inset: "") {
  @if ($inset != "") {
    @include css3-prefix('box-shadow', $inset $x $y $blur $color);
  } @else {
    @include css3-prefix('box-shadow', $x $y $blur $color);
  }
}

/* text shadow */
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
  @include css3-prefix('text-shadow', $x $y $blur $color);
}

/* box sizing */
@mixin box-sizing($type: border-box) {
  @include css3-prefix('box-sizing', $type);
}


/* border radius */
@mixin border-radius($radius: 5px) {
  @include css3-prefix('border-radius', $radius);
}


/* double border */
@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {
  border: 1px solid $colorOne;
  @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo);
  @include border-radius( $radius );
}

/* transform */
@mixin transform($params) {
  @include css3-prefix('transform', $params);
}

/* transform-origin */
@mixin transform-origin($params) {
  @include css3-prefix('transform-origin', $params);
}

/* transform style */
@mixin transform-style($style: preserve-3d) {
  @include css3-prefix('transform-style', $style);
}


/* triple borders */
@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {
  border: 1px solid $colorOne;

  @include border-radius($radius);

  @include css3-prefix('box-shadow', "0 0 0 1px #{$colorTwo}, 0 0 0 2px #{$colorThree}");
}

/* keyframes */
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

/* animation */
@mixin animation($str) {
  @include css3-prefix('animation', $str);
}